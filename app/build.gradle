plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    kotlin("kapt")
    id("dagger.hilt.android.plugin")
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.kosign.multimodulehilt"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.kosign.multimodulehilt.MockAppTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        dev {
            dimension "default"
        }
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    sourceSets {
        dev {
            java {
                srcDirs 'src/dsp/java'
            }
        }
        prod {
            java {
                srcDirs 'src/dsp/java'
            }
        }

    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release' && (variant.getFlavors().get(0).name == 'dev' || variant.getFlavors().get(0).name == 'mock')) {
            variant.setIgnore(true)
        }
    }

    dataBinding {
        enabled = true
    }

    hilt {
        enableTransformForLocalTests = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
    implementation "com.squareup.okhttp3:okhttp-tls:4.9.0"

    implementation "androidx.activity:activity-ktx:1.5.1"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // Moshi
    implementation "com.squareup.retrofit2:converter-moshi:2.4.0"

    mockImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    // dependency injection
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    testImplementation "androidx.test:runner:$androidx_test_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "org.robolectric:robolectric:4.7.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2'

    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'

    androidTestImplementation("androidx.test.espresso:espresso-contrib:$espresso_version") {
        exclude group: 'androidx.legacy'
        exclude group: 'androidx.print', module: 'print'
        exclude group: 'androidx.documentfile', module: 'documentfile'
        exclude group: 'androidx.localbroadcastmanager', module: 'localbroadcastmanager'
    }


    // For instrumented tests.
    androidTestMockImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    // ...with Kotlin.
    kaptAndroidTestMock("com.google.dagger:hilt-android-compiler:$hilt_version")

}
// Allow references to generated code
//kapt {
//    correctErrorTypes = true
//}